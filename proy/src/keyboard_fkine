#!/usr/bin/env python
 
import rospy
from std_msgs.msg import String
from sensor_msgs.msg import JointState
from markers import *
from functions import *
 
def callback(msg):
    i = 0.1
    key = msg.data
    if(key=="q"):
        q[0] += i
    elif(key=="a"):
        q[0] -= i
    
    if(key=="w"):
        q[1] += i
    elif(key=="s"):
        q[1] -= i
 
    if(key=="e"):
        q[2] += i
    elif(key=="d"):
        q[2] -= i
 
    if(key=="r"):
        q[3] += i
    elif(key=="f"):
        q[3] -= i
 
    if(key=="t"):
        q[4] += i
    elif(key=="g"):
        q[4] -= i
 
    if(key=="y"):
        q[5] += i
    elif(key=="h"):
        q[5] -= i
    
    if(key=="u"):
        q[6] += i
    elif(key=="j"):
        q[6] -= i

    if q[0]>3.1:  q[0]=3.1
    if q[0]<-3.1: q[0]=-3.1

    if q[1]>3.1:  q[1]=3.1
    if q[1]<-0.2: q[1]=-0.2

    if q[2]>0.85:  q[2]=0.85
    if q[2]<-0.85: q[2]=-0.85

    if q[3]>2.2:  q[3]=2.2
    if q[3]<-0.85: q[3]=-0.85

    if q[4]>1.85:  q[4]=1.85
    if q[4]<-1.85: q[4]=-1.85

    if q[5]>0.85:  q[5]=0.85
    if q[5]<-0.85: q[5]=-0.85

    if q[6]>0.85:  q[6]=0.85
    if q[6]<-0.85: q[6]=-0.85
    jstate.position = q
    T = fkine(q)
    bmarker.position(T)
    #print q
 
 
rospy.init_node("keyboard_fkine")
pub = rospy.Publisher('joint_states', JointState, queue_size=1000)
 
jnames = ["base_joint", "hombro_joint", "antebrazo_joint", "ante_brazo_joint", "brazo_joint", "brazo_mano_joint", "mano_joint"]
q = np.array([0.0, 0, 0, 0, 0, 0, 0])
jstate = JointState()
jstate.header.stamp = rospy.Time.now()
jstate.name = jnames
jstate.position = q
 
bmarker = BallMarker(color['GREEN'])
T = fkine(q)
bmarker.position(T)
 
rate = rospy.Rate(100)
if __name__ == '__main__':
    rospy.Subscriber("/keys", String, callback)
 
    while not rospy.is_shutdown():
        jstate.header.stamp = rospy.Time.now()
        pub.publish(jstate)
        bmarker.publish()
        rate.sleep()
